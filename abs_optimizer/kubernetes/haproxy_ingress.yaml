apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: myapp-ingress-rule
  namespace: myapp-namespace
spec:
  rules:
  - host: myapp
    http:
      paths:
      - path: /
        backend:
          serviceName: http-myapp
          servicePort: 9001
---
apiVersion: v1
data:
  balance-algorithm: leastconn
  dynamic-scaling: "true"
  timeout-client: "1h"
  timeout-client-fin: "1h"
  timeout-keep-alive: "61m"
  timeout-server: "1h"
  timeout-server-fin: "1h"
  timeout-tunnel: "2h"
kind: ConfigMap
metadata:
  name: haproxy-myapp-configmap
  namespace: myapp-namespace
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: haproxy-ingress
  name: haproxy-ingress
  namespace: myapp-namespace
spec:
  selector:
    matchLabels:
      run: haproxy-ingress
  template:
    metadata:
      labels:
        run: haproxy-ingress
    spec:
      serviceAccountName: myapp-service-account
      containers:
      - name: haproxy-ingress
        image: quay.io/jcmoraisjr/haproxy-ingress
        args:
        - --default-backend-service=$(POD_NAMESPACE)/ingress-default-backend
        - --default-ssl-certificate=$(POD_NAMESPACE)/tls-secret
        - --configmap=$(POD_NAMESPACE)/haproxy-myapp-configmap
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: stat
          containerPort: 1936
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: haproxy-ingress
  name: haproxy-ingress
  namespace: myapp-namespace
spec:
  ports:
  - name: port-1
    port: 80
    protocol: TCP
    targetPort: 80
  - name: port-2
    port: 443
    protocol: TCP
    targetPort: 443
  - name: port-3
    port: 1936
    protocol: TCP
    targetPort: 1936
  selector:
    run: haproxy-ingress
  type: NodePort
